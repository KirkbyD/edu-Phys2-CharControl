#pragma once
#include "sData.hpp"

// SUBSYSTEM TYPE
enum subsystem { CMD, COMPLEX, MODELS, LIGHTS, PHYSICS, AUDIO, ACTORS, CAMERA, AI, ANIMATION };

// COMMAND TYPE
enum cmd {
	// COMMAND ERRORS
	UNKN_CMD,

	// SYSTEM SPECIFIC COMMANDS
	UPDATE, SHOOT,

	// INTERNAL COMMANDS
	GET_POSITION, SET_POSITION, UPDATE_POSITION,			// POSITION [GET/SET/UPDATE]
	GET_ORIENTATION, SET_ORIENTATION,						// ORIENTATION [GET/SET]
	GVEL, SET_VELOCITY, UPDATE_VELOCITY,					// VELOCITY [SET/UPDATE]
	SET_STEERING_FORCE, RESET_STEERING_FORCE,				// STEERING FORCE [SET/RESET]
	GET_ACTIVE_FRONT,										// ACTIVE CAMERA FRONT VECTOR [GET]
	APPLY_FORCE,											// APPLY FORCE [ PHYSICS SYSTEM ]

	// DEVELOPER CONSOLE COMMANDS
	WIREFRAME, VISIBLE, CREATE, SELECT,

	// DEBUG MODE COMMANDS
	DEBUG_MODE,

	// MEDIATOR SPECIFIC COMMANDS
	SAVE_FILES, DATA_DISPLAY,

	// VERIFY TRIGGER CONDITION COMMANDS
	CHECK_TRIG_POSITION,

	// LUA SPECIFIC COMMANDS
	MOVE, ROTATE, FOLLOW, TRIGGER, LOOKAT, SERIAL, PARALLEL, ANIMASCRIPT,

	// AI SPECIFIC COMMANDS
	SFORMATION,												// FORMATION [SET]
	ACTIVATE_FORMATIONS, DEACTIVATE_FORMATIONS,				// FORMATION [ACTIVEATE / DEACTIVATE]

	SET_ACTIVE_AI,											// ACTIVE AI [SET]

	INVERT_PATH,											// INVERT THE AI FOLLOW PATH
	SET_SEPERATION_WEIGHT, SET_ALIGNMENT_WEIGHT, SET_COHESION_WEIGHT,
	
	// ECS STUFF
	REMOVE_COMP
};

// CMD STATES
enum cmdstate { NONE, ENABLE, DISABLE, TOGGLE };

// COMMAND ARGUMENTS
enum cmdargs { ALL };

// ERROR TYPE
enum error { OK, NOK, UNKNOWN_SUBSYSTEM, UNKNOWN_COMMAND, UNKNOWN_STATE, INVALID_SUBSYSTEM, INVALID_COMMAND, INVALID_COMMAND_ARGS };

class iMediatorInterface {
public:
	virtual ~iMediatorInterface() { };
	virtual sData RecieveMessage(sData& data) = 0;
};
